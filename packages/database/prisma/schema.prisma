datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  hasPackage     Boolean   @default(false)
  accounts      Account[]
  package       Package[]
  tracks        Track[]
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Account {
  id                String   @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Track {
  id             String   @id @default(cuid())
  timestamp      DateTime
  platform       String
  msPlayed       BigInt
  spotifyId      String   @db.VarChar(22)
  artistIds      String[] @db.VarChar(22)
  albumId        String   @db.VarChar(22)
  albumArtistIds String[] @db.VarChar(22)
  reasonStart    String
  reasonEnd      String
  shuffle        Boolean?
  skipped        Boolean?
  offline        Boolean?
  user           User     @relation(fields: [userId], references: [id])
  userId         String
}

model Package {
  id         String   @id @default(uuid())
  spotify_id String
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
